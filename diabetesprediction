{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":482,"sourceType":"datasetVersion","datasetId":228}],"dockerImageVersionId":30822,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"\n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sbn\n\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-28T11:24:56.560923Z","iopub.execute_input":"2024-12-28T11:24:56.561256Z","iopub.status.idle":"2024-12-28T11:24:57.504084Z","shell.execute_reply.started":"2024-12-28T11:24:56.561230Z","shell.execute_reply":"2024-12-28T11:24:57.502976Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"data = pd.read_csv('/kaggle/input/pima-indians-diabetes-database/diabetes.csv')\ndata.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T11:36:20.532383Z","iopub.execute_input":"2024-12-28T11:36:20.532742Z","iopub.status.idle":"2024-12-28T11:36:20.579376Z","shell.execute_reply.started":"2024-12-28T11:36:20.532715Z","shell.execute_reply":"2024-12-28T11:36:20.578289Z"}},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n0            6      148             72             35        0  33.6   \n1            1       85             66             29        0  26.6   \n2            8      183             64              0        0  23.3   \n3            1       89             66             23       94  28.1   \n4            0      137             40             35      168  43.1   \n\n   DiabetesPedigreeFunction  Age  Outcome  \n0                     0.627   50        1  \n1                     0.351   31        0  \n2                     0.672   32        1  \n3                     0.167   21        0  \n4                     2.288   33        1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Pregnancies</th>\n      <th>Glucose</th>\n      <th>BloodPressure</th>\n      <th>SkinThickness</th>\n      <th>Insulin</th>\n      <th>BMI</th>\n      <th>DiabetesPedigreeFunction</th>\n      <th>Age</th>\n      <th>Outcome</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>148</td>\n      <td>72</td>\n      <td>35</td>\n      <td>0</td>\n      <td>33.6</td>\n      <td>0.627</td>\n      <td>50</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>85</td>\n      <td>66</td>\n      <td>29</td>\n      <td>0</td>\n      <td>26.6</td>\n      <td>0.351</td>\n      <td>31</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8</td>\n      <td>183</td>\n      <td>64</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23.3</td>\n      <td>0.672</td>\n      <td>32</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>89</td>\n      <td>66</td>\n      <td>23</td>\n      <td>94</td>\n      <td>28.1</td>\n      <td>0.167</td>\n      <td>21</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>137</td>\n      <td>40</td>\n      <td>35</td>\n      <td>168</td>\n      <td>43.1</td>\n      <td>2.288</td>\n      <td>33</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"data.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T11:37:29.500185Z","iopub.execute_input":"2024-12-28T11:37:29.500601Z","iopub.status.idle":"2024-12-28T11:37:29.535716Z","shell.execute_reply.started":"2024-12-28T11:37:29.500561Z","shell.execute_reply":"2024-12-28T11:37:29.534601Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"       Pregnancies     Glucose  BloodPressure  SkinThickness     Insulin  \\\ncount   768.000000  768.000000     768.000000     768.000000  768.000000   \nmean      3.845052  120.894531      69.105469      20.536458   79.799479   \nstd       3.369578   31.972618      19.355807      15.952218  115.244002   \nmin       0.000000    0.000000       0.000000       0.000000    0.000000   \n25%       1.000000   99.000000      62.000000       0.000000    0.000000   \n50%       3.000000  117.000000      72.000000      23.000000   30.500000   \n75%       6.000000  140.250000      80.000000      32.000000  127.250000   \nmax      17.000000  199.000000     122.000000      99.000000  846.000000   \n\n              BMI  DiabetesPedigreeFunction         Age     Outcome  \ncount  768.000000                768.000000  768.000000  768.000000  \nmean    31.992578                  0.471876   33.240885    0.348958  \nstd      7.884160                  0.331329   11.760232    0.476951  \nmin      0.000000                  0.078000   21.000000    0.000000  \n25%     27.300000                  0.243750   24.000000    0.000000  \n50%     32.000000                  0.372500   29.000000    0.000000  \n75%     36.600000                  0.626250   41.000000    1.000000  \nmax     67.100000                  2.420000   81.000000    1.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Pregnancies</th>\n      <th>Glucose</th>\n      <th>BloodPressure</th>\n      <th>SkinThickness</th>\n      <th>Insulin</th>\n      <th>BMI</th>\n      <th>DiabetesPedigreeFunction</th>\n      <th>Age</th>\n      <th>Outcome</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>768.000000</td>\n      <td>768.000000</td>\n      <td>768.000000</td>\n      <td>768.000000</td>\n      <td>768.000000</td>\n      <td>768.000000</td>\n      <td>768.000000</td>\n      <td>768.000000</td>\n      <td>768.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>3.845052</td>\n      <td>120.894531</td>\n      <td>69.105469</td>\n      <td>20.536458</td>\n      <td>79.799479</td>\n      <td>31.992578</td>\n      <td>0.471876</td>\n      <td>33.240885</td>\n      <td>0.348958</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>3.369578</td>\n      <td>31.972618</td>\n      <td>19.355807</td>\n      <td>15.952218</td>\n      <td>115.244002</td>\n      <td>7.884160</td>\n      <td>0.331329</td>\n      <td>11.760232</td>\n      <td>0.476951</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.078000</td>\n      <td>21.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.000000</td>\n      <td>99.000000</td>\n      <td>62.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>27.300000</td>\n      <td>0.243750</td>\n      <td>24.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>3.000000</td>\n      <td>117.000000</td>\n      <td>72.000000</td>\n      <td>23.000000</td>\n      <td>30.500000</td>\n      <td>32.000000</td>\n      <td>0.372500</td>\n      <td>29.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>6.000000</td>\n      <td>140.250000</td>\n      <td>80.000000</td>\n      <td>32.000000</td>\n      <td>127.250000</td>\n      <td>36.600000</td>\n      <td>0.626250</td>\n      <td>41.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>17.000000</td>\n      <td>199.000000</td>\n      <td>122.000000</td>\n      <td>99.000000</td>\n      <td>846.000000</td>\n      <td>67.100000</td>\n      <td>2.420000</td>\n      <td>81.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"data.info()\ndata.isna().sum()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T11:41:59.756007Z","iopub.execute_input":"2024-12-28T11:41:59.756371Z","iopub.status.idle":"2024-12-28T11:41:59.770952Z","shell.execute_reply.started":"2024-12-28T11:41:59.756340Z","shell.execute_reply":"2024-12-28T11:41:59.769816Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 768 entries, 0 to 767\nData columns (total 9 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   Pregnancies               768 non-null    int64  \n 1   Glucose                   768 non-null    int64  \n 2   BloodPressure             768 non-null    int64  \n 3   SkinThickness             768 non-null    int64  \n 4   Insulin                   768 non-null    int64  \n 5   BMI                       768 non-null    float64\n 6   DiabetesPedigreeFunction  768 non-null    float64\n 7   Age                       768 non-null    int64  \n 8   Outcome                   768 non-null    int64  \ndtypes: float64(2), int64(7)\nmemory usage: 54.1 KB\n","output_type":"stream"},{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"Pregnancies                 0\nGlucose                     0\nBloodPressure               0\nSkinThickness               0\nInsulin                     0\nBMI                         0\nDiabetesPedigreeFunction    0\nAge                         0\nOutcome                     0\ndtype: int64"},"metadata":{}}],"execution_count":13},{"cell_type":"code","source":"data.duplicated().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T11:42:04.881334Z","iopub.execute_input":"2024-12-28T11:42:04.881782Z","iopub.status.idle":"2024-12-28T11:42:04.891226Z","shell.execute_reply.started":"2024-12-28T11:42:04.881748Z","shell.execute_reply":"2024-12-28T11:42:04.889899Z"}},"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"plt.figure(figsize=(12,6))\n\nsbn.countplot(x='Outcome',data=data)\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T11:46:59.889102Z","iopub.execute_input":"2024-12-28T11:46:59.889438Z","iopub.status.idle":"2024-12-28T11:47:00.096114Z","shell.execute_reply.started":"2024-12-28T11:46:59.889412Z","shell.execute_reply":"2024-12-28T11:47:00.094672Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x600 with 1 Axes>","image/png":"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Eu0AAABQKNEOAAAAhRLtAAAAUCjRDgAAAIUS7QAAAFAo0Q4AAACFetVE+/z583PwwQdnn332ycSJE7Ns2bJqjwQAAAA75VUR7bfccktmz56dSy+9NI888kiOPvroTJ06NR0dHdUeDQAAAHrtVRHtX/7yl3POOefkrLPOyrhx47JgwYLsu+++ueGGG6o9GgAAAPTagGoPsLO2bt2a5cuXZ86cOZW1fv36ZcqUKWltbX3J12zZsiVbtmypPO/s7EySdHV17dphd4HtW35X7REA6AN74t+gPd1zm7dXewQA+sCe+jf0hbm7u7v/6H57fLT/6le/yvbt29PY2NhjvbGxMU8++eRLvmbevHm57LLLXrQ+evToXTIjAPwpDV/5cLVHAIA907yGak+wU5577rk0NLz8Mezx0d4bc+bMyezZsyvPd+zYkWeffTbDhw9PTU1NFScD/lBXV1dGjx6dNWvWpL6+vtrjAMAew99QKFt3d3eee+65jBo16o/ut8dH+/7775/+/funvb29x3p7e3uamppe8jV1dXWpq6vrsTZ06NBdNSLQB+rr6/0PBwD0gr+hUK4/dob9BXv8jehqa2szYcKELFmypLK2Y8eOLFmyJM3NzVWcDAAAAHbOHn+mPUlmz56dmTNn5thjj82b3/zmXH311dm0aVPOOuusao8GAAAAvfaqiPbTTz8969evz9y5c9PW1pZjjjkmixYtetHN6YA9T11dXS699NIXXdICAPxx/obCq0NN95+6vzwAAABQFXv8Ne0AAADwaiXaAQAAoFCiHQAAAAol2gEAAKBQoh0o2vz583PwwQdnn332ycSJE7Ns2bJqjwQARbvvvvvynve8J6NGjUpNTU1uv/32ao8E7ATRDhTrlltuyezZs3PppZfmkUceydFHH52pU6emo6Oj2qMBQLE2bdqUo48+OvPnz6/2KEAf8JNvQLEmTpyY4447Ltdee22SZMeOHRk9enTOP//8/P3f/32VpwOA8tXU1OS2227LqaeeWu1RgF5yph0o0tatW7N8+fJMmTKlstavX79MmTIlra2tVZwMAAB2H9EOFOlXv/pVtm/fnsbGxh7rjY2NaWtrq9JUAACwe4l2AAAAKJRoB4q0//77p3///mlvb++x3t7enqampipNBQAAu5doB4pUW1ubCRMmZMmSJZW1HTt2ZMmSJWlubq7iZAAAsPsMqPYAAC9n9uzZmTlzZo499ti8+c1vztVXX51NmzblrLPOqvZoAFCsjRs35qmnnqo8f+aZZ/Loo49m2LBhGTNmTBUnA3rDT74BRbv22mtz5ZVXpq2tLcccc0yuueaaTJw4sdpjAUCx7r333pxwwgkvWp85c2YWLly4+wcCdopoBwAAgEK5ph0AAAAKJdoBAACgUKIdAAAACiXaAQAAoFCiHQAAAAol2gEAAKBQoh0AAAAKJdoBAACgUKIdAF5F1qxZkw996EMZNWpUamtrc9BBB+WjH/1ofv3rX7/i9/jFL36RmpqaPProo7tuUADgFRHtAPAq8fOf/zzHHntsVq1alW9961t56qmnsmDBgixZsiTNzc159tlnqz0iAPBnEu0A8CrR0tKS2tra3H333Xnb296WMWPG5OSTT84999yT//mf/8knP/nJJElNTU1uv/32Hq8dOnRoFi5cmCQ55JBDkiR/8Rd/kZqamrz97W+v7HfDDTfkyCOPTF1dXQ444ICcd955lW2rV6/OKaecksGDB6e+vj7vf//7097eXtn+6U9/Osccc0xuuOGGjBkzJoMHD85HPvKRbN++PVdccUWampoycuTIfO5zn+sx24YNG/K3f/u3GTFiROrr6zN58uT89Kc/7cN/OQAol2gHgFeBZ599Nj/4wQ/ykY98JIMGDeqxrampKTNmzMgtt9yS7u7uP/ley5YtS5Lcc889WbduXf7t3/4tSXL99denpaUl5557blasWJF///d/z2GHHZYk2bFjR0455ZQ8++yzWbp0aRYvXpyf//znOf3003u899NPP5277rorixYtyre+9a18/etfz7Rp0/LLX/4yS5cuzRe+8IVccsklefDBByuved/73peOjo7cddddWb58ed70pjflxBNP9M0BAPYKA6o9AACw81atWpXu7u6MHTv2JbePHTs2v/nNb7J+/fo/+V4jRoxIkgwfPjxNTU2V9c9+9rP52Mc+lo9+9KOVteOOOy5JsmTJkqxYsSLPPPNMRo8enSS58cYbc+SRR+ahhx6q7Ldjx47ccMMNGTJkSMaNG5cTTjghK1euzPe///3069cvhx9+eL7whS/kRz/6USZOnJj//M//zLJly9LR0ZG6urokyRe/+MXcfvvt+c53vpNzzz23F/9aALDnEO0A8CrySs6k90ZHR0fWrl2bE0888SW3P/HEExk9enQl2JNk3LhxGTp0aJ544olKtB988MEZMmRIZZ/Gxsb0798//fr167HW0dGRJPnpT3+ajRs3Zvjw4T0+73e/+12efvrpPjs+ACiVaAeAV4HDDjssNTU1eeKJJ/JXf/VXL9r+xBNP5DWveU1GjBiRmpqaF8X9tm3b/uj7/+FX7ntr4MCBPZ7X1NS85NqOHTuSJBs3bswBBxyQe++990XvNXTo0D6ZCQBK5pp2AHgVGD58eN7xjnfkuuuuy+9+97se29ra2nLTTTfl9NNPT01NTUaMGJF169ZVtq9atSq//e1vK89ra2uTJNu3b6+sDRkyJAcffHCWLFnykp8/duzYrFmzJmvWrKmsPf7449mwYUPGjRvX6+N605velLa2tgwYMCCHHXZYj8f+++/f6/cFgD2FaAeAV4lrr702W7ZsydSpU3PfffdlzZo1WbRoUd7xjnfkta99beWu7JMnT861116bn/zkJ3n44Yfz4Q9/uMfZ7pEjR2bQoEFZtGhR2tvb09nZmeR/7/7+pS99Kddcc01WrVqVRx55JF/5yleSJFOmTMn48eMzY8aMPPLII1m2bFnOPPPMvO1tb8uxxx7b62OaMmVKmpubc+qpp+buu+/OL37xi9x///355Cc/mYcffngn/rUAYM8g2gHgVeL1r399Hn744Rx66KF5//vfn9e97nU599xzc8IJJ6S1tTXDhg1LknzpS1/K6NGj89a3vjV//dd/nY9//OPZd999K+8zYMCAXHPNNfnqV7+aUaNG5ZRTTkmSzJw5M1dffXWuu+66HHnkkXn3u9+dVatWJfnfr7R/97vfzWte85ocf/zxmTJlSg499NDccsstO3VMNTU1+f73v5/jjz8+Z511Vt7whjfkAx/4QP77v/87jY2NO/XeALAnqOneVXesAQAAAHaKM+0AAABQKNEOAAAAhRLtAAAAUCjRDgAAAIUS7QAAAFAo0Q4AAACFEu0AAABQKNEOAAAAhRLtAAAAUCjRDgAAAIUS7QAAAFAo0Q4AAACF+n8Q1D6nkPPFxgAAAABJRU5ErkJggg==\n"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"plt.figure(figsize=(12,12))\n\nfor i , col in enumerate(['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age','Outcome']):\n    plt.subplot(3,3, i+1)\n    sbn.boxplot(x=col,data=data)\n\nplt.show()\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T12:01:55.491724Z","iopub.execute_input":"2024-12-28T12:01:55.492142Z","iopub.status.idle":"2024-12-28T12:01:56.496072Z","shell.execute_reply.started":"2024-12-28T12:01:55.492099Z","shell.execute_reply":"2024-12-28T12:01:56.494808Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x1200 with 9 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":22},{"cell_type":"markdown","source":"# Standered Scaling and Lebel Endoding (preprocessing)","metadata":{}},{"cell_type":"code","source":"# Check for missing values before splitting\nprint(data.isnull().sum())\n\n# Assuming you want to remove rows with missing values\ndata = data.dropna()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T13:24:02.365263Z","iopub.execute_input":"2024-12-28T13:24:02.365691Z","iopub.status.idle":"2024-12-28T13:24:02.374243Z","shell.execute_reply.started":"2024-12-28T13:24:02.365654Z","shell.execute_reply":"2024-12-28T13:24:02.373032Z"}},"outputs":[{"name":"stdout","text":"Pregnancies                 0\nGlucose                     0\nBloodPressure               0\nSkinThickness               0\nInsulin                     0\nBMI                         0\nDiabetesPedigreeFunction    0\nAge                         0\nOutcome                     0\ndtype: int64\n","output_type":"stream"}],"execution_count":45},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nsc_x = StandardScaler()\n\nX = pd.DataFrame(sc_x.fit_transform(data.drop('Outcome', axis=1)), columns=data.columns[:-1])\ny = data['Outcome']\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T13:24:05.413248Z","iopub.execute_input":"2024-12-28T13:24:05.413661Z","iopub.status.idle":"2024-12-28T13:24:05.424130Z","shell.execute_reply.started":"2024-12-28T13:24:05.413616Z","shell.execute_reply":"2024-12-28T13:24:05.422929Z"}},"outputs":[],"execution_count":46},{"cell_type":"markdown","source":"# Train Test Splite","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T13:24:07.629138Z","iopub.execute_input":"2024-12-28T13:24:07.629459Z","iopub.status.idle":"2024-12-28T13:24:07.636744Z","shell.execute_reply.started":"2024-12-28T13:24:07.629434Z","shell.execute_reply":"2024-12-28T13:24:07.635626Z"}},"outputs":[],"execution_count":47},{"cell_type":"code","source":"# Finding the best K value for KNN\nfrom sklearn.neighbors import KNeighborsClassifier\n\ntrain_scores = []\ntest_scores = []\nfor i in range(1, 15):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train, y_train)\n    train_scores.append(knn.score(X_train, y_train))\n    test_scores.append(knn.score(X_test, y_test))\n\nmax_train_score = max(train_scores)\ntrain_scores_index = [i for i, v in enumerate(train_scores) if v == max_train_score]\n\nmax_test_score = max(test_scores)\ntest_scores_index = [i for i, v in enumerate(test_scores) if v == max_test_score]\n\nprint(f\"Maximum Training Score: {max_train_score:.2f}% at K = {list(map(lambda x: x+1, train_scores_index))}\")\nprint(f\"Maximum Testing Score: {max_test_score:.2f}% at K = {list(map(lambda x: x+1, test_scores_index))}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T13:24:10.215661Z","iopub.execute_input":"2024-12-28T13:24:10.216078Z","iopub.status.idle":"2024-12-28T13:24:10.909889Z","shell.execute_reply.started":"2024-12-28T13:24:10.216048Z","shell.execute_reply":"2024-12-28T13:24:10.908769Z"}},"outputs":[{"name":"stdout","text":"Maximum Training Score: 1.00% at K = [1]\nMaximum Testing Score: 0.78% at K = [13]\n","output_type":"stream"}],"execution_count":48},{"cell_type":"code","source":"# Model Performance\nprint(f\"Accuracy: {knn.score(X_test, y_test):.2f}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T13:26:08.849254Z","iopub.execute_input":"2024-12-28T13:26:08.849634Z","iopub.status.idle":"2024-12-28T13:26:08.874739Z","shell.execute_reply.started":"2024-12-28T13:26:08.849603Z","shell.execute_reply":"2024-12-28T13:26:08.873610Z"}},"outputs":[{"name":"stdout","text":"Accuracy: 0.78\n","output_type":"stream"}],"execution_count":55},{"cell_type":"code","source":"from sklearn.metrics import confusion_matrix, classification_report\n\ny_pred = knn.predict(X_test)\nprint(\"Confusion Matrix:\")\nprint(confusion_matrix(y_test, y_pred))\nprint(\"Classification Report:\")\nprint(classification_report(y_test, y_pred))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-28T13:28:53.708158Z","iopub.execute_input":"2024-12-28T13:28:53.708552Z","iopub.status.idle":"2024-12-28T13:28:53.742183Z","shell.execute_reply.started":"2024-12-28T13:28:53.708518Z","shell.execute_reply":"2024-12-28T13:28:53.740998Z"}},"outputs":[{"name":"stdout","text":"Confusion Matrix:\n[[141  16]\n [ 35  39]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.80      0.90      0.85       157\n           1       0.71      0.53      0.60        74\n\n    accuracy                           0.78       231\n   macro avg       0.76      0.71      0.73       231\nweighted avg       0.77      0.78      0.77       231\n\n","output_type":"stream"}],"execution_count":58}]}